name: Deploy

on:
  push:
    tags:
      - "*.*.*"

env:
    DB_HOST: kandula.db.elephantsql.com
    DB_NAME: yzxtaxwb
    DB_USER: ${{ secrets.DB_USER }}
    DB_PASS: ${{ secrets.DB_PASS }}
    SERVICE_NAME: beerchampz
    SERVICE_ID: srv-cnsmgfen7f5s73dbvo6g

jobs:

    build_push:
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v3

      - uses: actions/checkout@v4

      - name: set up docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: build and push app image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: odotti/${{ env.SERVICE_NAME }}:${{ github.ref_name }}

    run_migration:
      runs-on: ubuntu-latest
      needs: [build_push]
      steps:
        - uses: actions/checkout@v3

        - uses: actions/setup-go@v5
          with:
            go-version: "1.19.0"

        - name: run migration
          run: go run cmd/migrations/main.go -dir up

    update_image_tag:
      runs-on: ubuntu-latest
      needs: [run_migration]
      steps:
        - name: Update image tag
          run: |
            curl --request PATCH \
            --url https://api.render.com/v1/services/${{ env.SERVICE_ID }} \
            --header 'accept: application/json' \
            --header 'authorization: Bearer ${{ secrets.RENDER_API_KEY }}' \
            --header 'content-type: application/json' \
            --data '
              {
                "image": {
                  "ownerId": "odotti",
                  "imagePath": "docker.io/odotti/${{ env.SERVICE_NAME }}:${{ github.ref_name }}"
                }
              }
              ' 

    deploy:
      runs-on: ubuntu-latest
      needs: [update_image_tag]
      steps:
        - name: Deploy
          env:
            deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
          run: |
            curl "$deploy_url"
